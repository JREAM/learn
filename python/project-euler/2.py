# -*- coding: utf-8 -*-
"""
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""
import sys
import timeit

if __name__ == '__main__':
    if sys.maxint < 4000000:
        print "Cannot Test, Max Int is too small"
        sys.exit()


def fib(n):
    """ Recursively count down fib sequence"""
    if n > 1:
        return fib(n-1) + fib(n-2)
    else:
        return n * 1

print fib(11)


def fib_even(n):
    """ Add only the even numbers, Cannot recurse too deep """
    if n > 1 and n % 2 is 0:
        return fib_even(n-1) + fib_even(n-2)
    elif n > 1:
        return fib_even(n-1)
    else:
        return n * 1

print fib_even(11)


def fib_even_4m(maxnum):
    """ This is not correct """
    total = 0
    for i in range(1, maxnum):
        if i % 2 is 0 and i <= 4000000:
            total += total + i
    return total

# Takes too long
# print fib_even_4m(4000000)
